{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "a0d99bc284d52dfd29febba7b6ae55fe",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_users_email",
            "unique": true,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_users_email` ON `${TABLE_NAME}` (`email`)"
          }
        ]
      },
      {
        "tableName": "habits",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `type` TEXT NOT NULL, `frequency` TEXT NOT NULL, `frequency_days` TEXT, `daily_target` INTEGER, `start_date` INTEGER, `end_date` INTEGER, `is_archived` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "frequency",
            "columnName": "frequency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "frequencyDays",
            "columnName": "frequency_days",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "dailyTarget",
            "columnName": "daily_target",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "startDate",
            "columnName": "start_date",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "endDate",
            "columnName": "end_date",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "isArchived",
            "columnName": "is_archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_habits_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_habits_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_habits_frequency",
            "unique": false,
            "columnNames": [
              "frequency"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_habits_frequency` ON `${TABLE_NAME}` (`frequency`)"
          },
          {
            "name": "index_habits_is_archived",
            "unique": false,
            "columnNames": [
              "is_archived"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_habits_is_archived` ON `${TABLE_NAME}` (`is_archived`)"
          },
          {
            "name": "index_habits_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_habits_created_at` ON `${TABLE_NAME}` (`created_at`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "habit_logs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `habit_id` INTEGER NOT NULL, `date` INTEGER NOT NULL, `status` TEXT NOT NULL, `value` REAL, `created_at` INTEGER NOT NULL, FOREIGN KEY(`habit_id`) REFERENCES `habits`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "habitId",
            "columnName": "habit_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "REAL"
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_habit_logs_habit_id_date",
            "unique": false,
            "columnNames": [
              "habit_id",
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_habit_logs_habit_id_date` ON `${TABLE_NAME}` (`habit_id`, `date`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "habits",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "habit_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "tasks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `title` TEXT NOT NULL, `description` TEXT, `due_date` INTEGER, `priority` TEXT, `is_completed` INTEGER NOT NULL, `completion_date` INTEGER, `is_archived` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `reminder_date_time` TEXT, `is_reminder_set` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "dueDate",
            "columnName": "due_date",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "is_completed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completionDate",
            "columnName": "completion_date",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "isArchived",
            "columnName": "is_archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reminderDateTime",
            "columnName": "reminder_date_time",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "isReminderSet",
            "columnName": "is_reminder_set",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_tasks_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_tasks_due_date",
            "unique": false,
            "columnNames": [
              "due_date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_due_date` ON `${TABLE_NAME}` (`due_date`)"
          },
          {
            "name": "index_tasks_is_completed",
            "unique": false,
            "columnNames": [
              "is_completed"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_is_completed` ON `${TABLE_NAME}` (`is_completed`)"
          },
          {
            "name": "index_tasks_is_archived",
            "unique": false,
            "columnNames": [
              "is_archived"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_is_archived` ON `${TABLE_NAME}` (`is_archived`)"
          },
          {
            "name": "index_tasks_priority",
            "unique": false,
            "columnNames": [
              "priority"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_priority` ON `${TABLE_NAME}` (`priority`)"
          },
          {
            "name": "index_tasks_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_created_at` ON `${TABLE_NAME}` (`created_at`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "notes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, `note_type` TEXT NOT NULL, `list_items` TEXT, `is_archived` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `word_count` INTEGER NOT NULL, `is_favorite` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "noteType",
            "columnName": "note_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "listItems",
            "columnName": "list_items",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "isArchived",
            "columnName": "is_archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wordCount",
            "columnName": "word_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "is_favorite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_notes_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_notes_is_archived",
            "unique": false,
            "columnNames": [
              "is_archived"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_is_archived` ON `${TABLE_NAME}` (`is_archived`)"
          },
          {
            "name": "index_notes_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_created_at` ON `${TABLE_NAME}` (`created_at`)"
          },
          {
            "name": "index_notes_updated_at",
            "unique": false,
            "columnNames": [
              "updated_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_updated_at` ON `${TABLE_NAME}` (`updated_at`)"
          },
          {
            "name": "index_notes_is_favorite",
            "unique": false,
            "columnNames": [
              "is_favorite"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_is_favorite` ON `${TABLE_NAME}` (`is_favorite`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'a0d99bc284d52dfd29febba7b6ae55fe')"
    ]
  }
}